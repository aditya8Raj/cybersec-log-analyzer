name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # No external dependencies required - using standard library only

      - name: Verify Python installation
        run: |
          python --version
          python -c "import sys; print(f'Python {sys.version}')"

      - name: Run unit tests
        run: |
          python test_analyzer.py

      - name: Test basic CLI functionality
        run: |
          python analyzer.py --help

      - name: Test with sample log file
        run: |
          python analyzer.py logs/auth.log --quiet

      - name: Test export functionality
        run: |
          python analyzer.py logs/auth.log --export csv --output test_output.csv --quiet
          python analyzer.py logs/auth.log --export json --output test_output.json --quiet

      - name: Test analysis features
        run: |
          python analyzer.py logs/auth.log --top-attackers 5 --quiet
          python analyzer.py logs/auth.log --check-ip 192.168.1.10

      - name: Test demo script
        run: |
          python demo.py

      - name: Verify output files were created
        run: |
          test -f test_output.csv && echo "CSV file created successfully"
          test -f test_output.json && echo "JSON file created successfully"

      - name: Clean up test files
        run: |
          rm -f *.csv *.json
